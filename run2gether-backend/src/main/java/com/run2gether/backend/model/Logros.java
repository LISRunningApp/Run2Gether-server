package com.run2gether.backend.model;
// Generated 16-may-2016 18:34:41 by Hibernate Tools 5.1.0.Alpha1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Logros generated by hbm2java
 */
@Entity
@Table(name = "logros", catalog = "run2gether_dev", uniqueConstraints = @UniqueConstraint(columnNames = "name"))
public class Logros implements java.io.Serializable {

	private static final long serialVersionUID = 7L;
	private int id;
	private String name;
	private String descripcion;
	private String iconPath;
	private Set<Userslogros> userslogroses = new HashSet<Userslogros>(0);

	public Logros() {
	}

	public Logros(int id, String name) {
		this.id = id;
		this.name = name;
	}

	public Logros(int id, String name, String descripcion, String iconPath, Set<Userslogros> userslogroses) {
		this.id = id;
		this.name = name;
		this.descripcion = descripcion;
		this.iconPath = iconPath;
		this.userslogroses = userslogroses;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Column(name = "name", unique = true, nullable = false, length = 45)
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "descripcion")
	public String getDescripcion() {
		return descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	@Column(name = "iconPath")
	public String getIconPath() {
		return iconPath;
	}

	public void setIconPath(String iconPath) {
		this.iconPath = iconPath;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "logros")
	public Set<Userslogros> getUserslogroses() {
		return userslogroses;
	}

	public void setUserslogroses(Set<Userslogros> userslogroses) {
		this.userslogroses = userslogroses;
	}

}
