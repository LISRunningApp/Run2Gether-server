package com.run2gether.backend.model;
// Generated 24-may-2016 23:17:21 by Hibernate Tools 5.1.0.Alpha1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Friend generated by hbm2java
 */
@Entity
@Table(name = "friend", catalog = "run2gether_dev")
public class Friend implements java.io.Serializable {

	private static final long serialVersionUID = 5L;
	private FriendId id;
	private User userByIdFriend;
	private User userByIdUser;
	private String status;
	private Date dateModified;

	public Friend() {
	}

	public Friend(FriendId id, User userByIdFriend, User userByIdUser) {
		this.id = id;
		this.userByIdFriend = userByIdFriend;
		this.userByIdUser = userByIdUser;
	}

	public Friend(FriendId id, User userByIdFriend, User userByIdUser, String status, Date dateModified) {
		this.id = id;
		this.userByIdFriend = userByIdFriend;
		this.userByIdUser = userByIdUser;
		this.status = status;
		this.dateModified = dateModified;
	}

	@EmbeddedId

	@AttributeOverrides({ @AttributeOverride(name = "idUser", column = @Column(name = "id_user", nullable = false)),
			@AttributeOverride(name = "idFriend", column = @Column(name = "id_friend", nullable = false)) })
	public FriendId getId() {
		return id;
	}

	public void setId(FriendId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_friend", nullable = false, insertable = false, updatable = false)
	public User getUserByIdFriend() {
		return userByIdFriend;
	}

	public void setUserByIdFriend(User userByIdFriend) {
		this.userByIdFriend = userByIdFriend;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_user", nullable = false, insertable = false, updatable = false)
	public User getUserByIdUser() {
		return userByIdUser;
	}

	public void setUserByIdUser(User userByIdUser) {
		this.userByIdUser = userByIdUser;
	}

	@Column(name = "status", length = 9)
	public String getStatus() {
		return status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_modified", length = 19)
	public Date getDateModified() {
		return dateModified;
	}

	public void setDateModified(Date dateModified) {
		this.dateModified = dateModified;
	}

	public void update(Friend modyAtt) {
		status = modyAtt.status == null ? status : modyAtt.status;
	}

}
