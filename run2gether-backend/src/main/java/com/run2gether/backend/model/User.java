package com.run2gether.backend.model;
// Generated 07-may-2016 22:23:29 by Hibernate Tools 5.1.0.Alpha1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import javax.xml.bind.annotation.XmlTransient;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "users", catalog = "run2gether_dev", uniqueConstraints = { @UniqueConstraint(columnNames = "email"),
		@UniqueConstraint(columnNames = "username") })
public class User implements java.io.Serializable {

	private static final long serialVersionUID = 4L;
	private Integer id;
	private String name;
	private String surname;
	private String email;
	private String username;
	private Date creationDate;
	private Date lastLogin;
	private Integer status;
	private int loginType;
	private Integer age;
	private Integer size;
	private Float weight;
	private String sex;
	private Set<Userslogros> userslogroses = new HashSet<Userslogros>(0);
	private Set<Groupactivity> groupactivitieses = new HashSet<Groupactivity>(0);
	private Set<Usersgroupactivities> usersgroupactivitieses = new HashSet<Usersgroupactivities>(0);
	private Set<Activity> activitieses = new HashSet<Activity>(0);

	public User() {
	}

	public User(String name, String email, Date creationDate, int loginType) {
		this.name = name;
		this.email = email;
		this.creationDate = creationDate;
		this.loginType = loginType;
	}

	public User(String name, String surname, String email, String username, Date creationDate, Date lastLogin,
			Integer status, int loginType, Integer age, Integer size, Float weight, String sex,
			Set<Userslogros> userslogroses, Set<Groupactivity> groupactivitieses,
			Set<Usersgroupactivities> usersgroupactivitieses, Set<Activity> activitieses) {
		this.name = name;
		this.surname = surname;
		this.email = email;
		this.username = username;
		this.creationDate = creationDate;
		this.lastLogin = lastLogin;
		this.status = status;
		this.loginType = loginType;
		this.age = age;
		this.size = size;
		this.weight = weight;
		this.sex = sex;
		this.userslogroses = userslogroses;
		this.groupactivitieses = groupactivitieses;
		this.usersgroupactivitieses = usersgroupactivitieses;
		this.activitieses = activitieses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@XmlTransient
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "name", nullable = false, length = 80)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "surname", length = 160)
	public String getSurname() {
		return this.surname;
	}

	public void setSurname(String surname) {
		this.surname = surname;
	}

	@Column(name = "email", unique = true, nullable = false)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "username", unique = true)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creation_date", nullable = false, length = 19)
	public Date getCreationDate() {
		return this.creationDate;
	}

	public void setCreationDate(Date creationDate) {
		this.creationDate = creationDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_login", length = 19)
	public Date getLastLogin() {
		return this.lastLogin;
	}

	public void setLastLogin(Date lastLogin) {
		this.lastLogin = lastLogin;
	}

	@Column(name = "status")
	public Integer getStatus() {
		return this.status;
	}

	public void setStatus(Integer status) {
		this.status = status;
	}

	@Column(name = "login_type", nullable = false)
	public int getLoginType() {
		return this.loginType;
	}

	public void setLoginType(int loginType) {
		this.loginType = loginType;
	}

	@Column(name = "age")
	public Integer getAge() {
		return this.age;
	}

	public void setAge(Integer age) {
		this.age = age;
	}

	@Column(name = "size")
	public Integer getSize() {
		return this.size;
	}

	public void setSize(Integer size) {
		this.size = size;
	}

	@Column(name = "weight", precision = 12, scale = 0)
	public Float getWeight() {
		return this.weight;
	}

	public void setWeight(Float weight) {
		this.weight = weight;
	}

	@Column(name = "sex", length = 45)
	public String getSex() {
		return this.sex;
	}

	public void setSex(String sex) {
		this.sex = sex;
	}

	@JsonIgnore
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Userslogros> getUserslogroses() {
		return this.userslogroses;
	}

	public void setUserslogroses(Set<Userslogros> userslogroses) {
		this.userslogroses = userslogroses;
	}

	@JsonIgnore
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Groupactivity> getGroupactivitieses() {
		return this.groupactivitieses;
	}

	public void setGroupactivitieses(Set<Groupactivity> groupactivitieses) {
		this.groupactivitieses = groupactivitieses;
	}

	@JsonIgnore
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Usersgroupactivities> getUsersgroupactivitieses() {
		return this.usersgroupactivitieses;
	}

	public void setUsersgroupactivitieses(Set<Usersgroupactivities> usersgroupactivitieses) {
		this.usersgroupactivitieses = usersgroupactivitieses;
	}

	@JsonIgnore
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Activity> getActivitieses() {
		return this.activitieses;
	}

	public void setActivitieses(Set<Activity> activitieses) {
		this.activitieses = activitieses;
	}

}
